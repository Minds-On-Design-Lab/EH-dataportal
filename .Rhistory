subtopic_indicator_groups
write_xlsx(subtopic_indicator_groups, "subtopic_indicator_groups.xlsx")
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
current_indicators_frontmatter
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
current_indicators_frontmatter
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order) %>%
select(-order) %>%
mutate(header = replace_na(header, "null"))
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order)
subtopic_md_files <- dir_ls("content/data-explorer")
for (i in 1:length(subtopic_md_files)) {
this_subtopic_file <- subtopic_md_files[i]
if (path_file(this_subtopic_file) %in% c("_index.md", "all-data.md")) next
cat(i, ":", this_subtopic_file, "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# read in markdown file
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_markdown <- read_file(this_subtopic_file)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# detect line ending style
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
linebreak <- if_else(str_detect(current_markdown, "\r\n"), "\r\n", "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# get current subtopic indicators
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
if (nrow(current_indicators_frontmatter) != 0) {
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# join current subtopic indicators to header in database
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
this_subtopic_data <-
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order) %>%
select(-order) %>%
mutate(header = replace_na(header, "null"))
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# loop through headers
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
header_list <- list()
unique_headers <- unique(this_subtopic_data$header)
for (j in 1:length(unique_headers)) {
this_header <- unique_headers[j]
# format object so that it converts to correct YAML
this_header_data <-
this_subtopic_data %>%
filter(header == unique_headers[j])
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = this_header_data$IndicatorID
)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# convert to yaml
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
indicators_frontmatter <-
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# replace current indicators JSON with YAML
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0(indicators_frontmatter, "menu:"))
} else {
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0("indicators: ", linebreak, "menu:"))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# overwrite subtopic markdown
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
write_file(new_markdown, this_subtopic_file)
}
subtopic_indicator_groups
subtopic_indicator_groups %>% filter(subtopic_name == "mortality")
subtopic_md_files <- dir_ls("content/data-explorer")
for (i in 1:length(subtopic_md_files)) {
this_subtopic_file <- subtopic_md_files[i]
if (path_file(this_subtopic_file) %in% c("_index.md", "all-data.md")) next
cat(i, ":", this_subtopic_file, "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# read in markdown file
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_markdown <- read_file(this_subtopic_file)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# detect line ending style
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
linebreak <- if_else(str_detect(current_markdown, "\r\n"), "\r\n", "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# get current subtopic indicators
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
if (nrow(current_indicators_frontmatter) != 0) {
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# join current subtopic indicators to header in database
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
this_subtopic_data <-
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order) %>%
select(-order) %>%
mutate(header = replace_na(header, "null"))
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# loop through headers
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
header_list <- list()
unique_headers <- unique(this_subtopic_data$header)
for (j in 1:length(unique_headers)) {
this_header <- unique_headers[j]
# format object so that it converts to correct YAML
this_header_data <-
this_subtopic_data %>%
filter(header == unique_headers[j])
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = this_header_data$IndicatorID
)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# convert to yaml
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
indicators_frontmatter <-
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# replace current indicators JSON with YAML
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0(indicators_frontmatter, "menu:"))
} else {
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0("indicators: ", linebreak, "menu:"))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# overwrite subtopic markdown
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
write_file(new_markdown, this_subtopic_file)
}
this_subtopic_data
subtopic_indicator_groups
subtopic_indicator_groups <- subtopic_indicator_groups %>% mutate(
header = header %>% str_replace("0", "null"),
order = 1:nrow(.),
subtopic_id = as.integer(subtopic_id),
IndicatorID = as.integer(IndicatorID)
)
subtopic_indicator_groups
write_xlsx(subtopic_indicator_groups, "subtopic_indicator_groups.xlsx")
subtopic_md_files <- dir_ls("content/data-explorer")
for (i in 1:length(subtopic_md_files)) {
this_subtopic_file <- subtopic_md_files[i]
if (path_file(this_subtopic_file) %in% c("_index.md", "all-data.md")) next
cat(i, ":", this_subtopic_file, "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# read in markdown file
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_markdown <- read_file(this_subtopic_file)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# detect line ending style
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
linebreak <- if_else(str_detect(current_markdown, "\r\n"), "\r\n", "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# get current subtopic indicators
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
if (nrow(current_indicators_frontmatter) != 0) {
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# join current subtopic indicators to header in database
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
this_subtopic_data <-
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order) %>%
select(-order) %>%
mutate(
header = replace_na(header, "null")
)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# loop through headers
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
header_list <- list()
unique_headers <- unique(this_subtopic_data$header)
for (j in 1:length(unique_headers)) {
this_header <- unique_headers[j]
# format object so that it converts to correct YAML
this_header_data <-
this_subtopic_data %>%
filter(header == unique_headers[j])
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = this_header_data$IndicatorID
)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# convert to yaml
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
indicators_frontmatter <-
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# replace current indicators JSON with YAML
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0(indicators_frontmatter, "menu:"))
} else {
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0("indicators: ", linebreak, "menu:"))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# overwrite subtopic markdown
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
write_file(new_markdown, this_subtopic_file)
}
subtopic_indicator_groups %>% filter(subtopic_name == "mortality")
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE)
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = TRUE)
subtopic_md_files
which(subtopic_md_files == "content/data-explorer/energy.md")
i=26
this_subtopic_file <- subtopic_md_files[i]
current_markdown <- read_file(this_subtopic_file)
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
this_subtopic_data <-
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order) %>%
select(-order) %>%
mutate(
header = replace_na(header, "null")
)
for (j in 1:length(unique_headers)) {
this_header <- unique_headers[j]
# format object so that it converts to correct YAML
this_header_data <-
this_subtopic_data %>%
filter(header == unique_headers[j])
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = this_header_data$IndicatorID
)
}
header_list <- list()
unique_headers <- unique(this_subtopic_data$header)
for (j in 1:length(unique_headers)) {
this_header <- unique_headers[j]
# format object so that it converts to correct YAML
this_header_data <-
this_subtopic_data %>%
filter(header == unique_headers[j])
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = this_header_data$IndicatorID
)
}
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = TRUE)
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = TRUE, omap = FALSE)
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE)
list(indicators = header_list)
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = `class<-`(this_header_data$IndicatorID, "verbatim")
)
j
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = `class<-`(this_header_data$IndicatorID, "verbatim")
)
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE)
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE)
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE) %>%
str_replace_all("(\s*)(IndicatorID:\s*)(\d{1,4})", paste0("\\1\\2", linebreak, "\\1- \\3"))
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE) %>%
str_replace_all("(\\s*)(IndicatorID:\\s*)(\\d{1,4})", paste0("\\1\\2", linebreak, "\\1- \\3"))
linebreak
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE) %>%
str_replace_all("( *)(IndicatorID: *)(\\d{1,4})", paste0("\\1\\2", linebreak, "\\1- \\3"))
current_markdown
for (i in 1:length(subtopic_md_files)) {
this_subtopic_file <- subtopic_md_files[i]
if (path_file(this_subtopic_file) %in% c("_index.md", "all-data.md")) next
cat(i, ":", this_subtopic_file, "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# read in markdown file
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_markdown <- read_file(this_subtopic_file)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# detect line ending style
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
linebreak <- if_else(str_detect(current_markdown, "\r\n"), "\r\n", "\n")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# get current subtopic indicators
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
if (nrow(current_indicators_frontmatter) != 0) {
current_indicators_frontmatter <-
current_indicators_frontmatter %>%
select(subtopic_id, IndicatorID = internal_id)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# join current subtopic indicators to header in database
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
this_subtopic_data <-
left_join(
current_indicators_frontmatter,
subtopic_indicator_groups %>% select(order, subtopic_id, IndicatorID, header),
by = c("subtopic_id", "IndicatorID")
) %>%
arrange(order) %>%
select(-order) %>%
mutate(
header = replace_na(header, "null")
)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# loop through headers
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
header_list <- list()
unique_headers <- unique(this_subtopic_data$header)
for (j in 1:length(unique_headers)) {
this_header <- unique_headers[j]
# format object so that it converts to correct YAML
this_header_data <-
this_subtopic_data %>%
filter(header == unique_headers[j])
header_list[[j]] <-
list(
header = `class<-`(unique_headers[j], "verbatim"),
IndicatorID = `class<-`(this_header_data$IndicatorID, "verbatim")
)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# convert to yaml
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
indicators_frontmatter <-
list(indicators = header_list) %>%
as.yaml(line.sep = linebreak, indent.mapping.sequence = FALSE, omap = FALSE) %>%
str_replace_all("( *)(IndicatorID: *)(\\d{1,4})", paste0("\\1\\2", linebreak, "\\1- \\3"))
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# replace current indicators JSON with YAML
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0(indicators_frontmatter, "menu:"))
} else {
new_markdown <-
current_markdown %>%
str_replace("indicators:(.|\r\n|\n)*menu:", paste0("indicators: ", linebreak, "menu:"))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# overwrite subtopic markdown
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
write_file(new_markdown, this_subtopic_file)
}
subtopic_indicator_groups
subtopic_indicator_groups %>% filter(subtopic_id == 9)
subtopic_indicator_groups %>% filter(subtopic_id == 109)
subtopic_md_files
which(subtopic_md_files == "content/data-explorer/social-and-economic-conditions.md")
i=54
this_subtopic_file <- subtopic_md_files[i]
if (path_file(this_subtopic_file) %in% c("_index.md", "all-data.md")) next
this_subtopic_file <- subtopic_md_files[i]
cat(i, ":", this_subtopic_file, "\n")
current_markdown <- read_file(this_subtopic_file)
current_markdown
current_indicators_frontmatter
current_indicators_frontmatter <-
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
fromJSON() %>%
as_tibble()
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:")
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_remove("indicators:") %>%
str_remove_all("-") %>%
str_squish() %>%
yaml::yaml.load() %>%
as_tibble()
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
str_squish() %>%
yaml::yaml.load() %>%
as_tibble()
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
yaml::yaml.load() %>%
as_tibble()
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
yaml::yaml.load(as.named.list = FALSE) %>%
as_tibble()
current_markdown %>%
str_extract("indicators:(.|\r\n|\n)*menu:") %>%
str_remove("menu:") %>%
yaml::yaml.load()
