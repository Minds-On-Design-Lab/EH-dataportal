name: Hugo Build to GitHub Pages

# run action on a merged PR on development

on:
  push:
    branches: 
      - feature-gha-indexing
    # types:
    #   - closed

jobs:
  deploy:
    name: Build & Deploy w/ Hugo
    runs-on: ubuntu-20.04

    # only run on PR that is also merged
    
    # if: github.event.pull_request.merged == true

    # don't run two of these jobs at the same time

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    # define job's steps

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # set up node and cache for npm
    
    - name: Setup node
      uses: actions/setup-node@v3
      with: 
        node-version: 14
        cache: 'npm'

    - name: Installing npm 
      run: npm install
    
    # set up cache for node modules

    - name: Cache node_modules
      id: cache-nodemodules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
    
    # install npm dependencies (if not cached)
    
    - name: Install dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: | 
        npm install grunt
        npm install lunr
        npm install yamljs
        npm install string
        npm install url

    # set up Hugo
    
    - name: Hugo setup
      uses: peaceiris/actions-hugo@v2.4.13
      with:
        hugo-version: '0.97.0'
        extended: true

    # cache Hugo modules

    - name: Hugo cache
      uses: actions/cache@v2
      with:
        path: /tmp/hugo_cache
        key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-hugomod-

    # build sit with Hugo

    - name: Hugo Build
      run: hugo --environment local
      
    # deploying built site
      
    - name: Deploy to gh-p
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./
        enable_jekyll: false
        
    # running indexing

    # checking out the two relevant branches, which makes them available in the workspace

    - name: Checkout development
      uses: actions/checkout@v3
      with:
        path: development

    - name: Checkout gh-pages
      uses: actions/checkout@v3
      with:
        path: gh-pages

    - name: list gh-pages files
      run: |
        cd '${{ github.workspace }}'
        ls
        cd '${{ github.workspace }}/gh-pages/'
        ls
    
    # run gruntfile action

    - name: Build index with Grunt
      run: | 
        cd '${{ github.workspace }}'
        grunt lunr-index

    # commit built index

    - name: Commit changes to PagesIndex.json
      # uses: elstudio/actions-js-build/commit@v4
      run: |
        cd ${{ github.workspace }}/gh-pages/

        # Set up .netrc file with GitHub credentials
          git_setup ( ) {
            # Git requires our "name" and email address -- use GitHub handle
            git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
            git config user.name "$GITHUB_ACTOR"
          }

          # This section only runs if there have been file changes
          echo "Checking for uncommitted changes in the git working tree."
          if expr $(git status --porcelain | wc -l) \> 0
          then 
            git_setup
            git add .
            git commit -m "Regenerate index"
            git push
          else 
            echo "Working tree clean. Nothing to commit."
          fi
      # with:
      #   commitMessage: Regenerate index    
      #   wdPath: '${{ github.workspace }}/gh-pages/'
